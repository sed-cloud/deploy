name: 'deploy'
description: 'deploys a python repo to my droplet running pm2 (discount google cloud)'
inputs:
  repo-owner:
    description: 'owner of the repo being deployed (must be within the organization "sed-cloud")'
    required: true
  repo-name: 
    description: 'name of the repo being deployed'
    required: true
  
  SED_CLOUD_HOST: 
    description: 'cloud host secret from org (github actions hates me)'
    required: true
  SED_CLOUD_USER: 
    description: 'cloud user secret from org (github actions hates me)'
    required: true
  SSH_PRIVATE_KEY: 
    description: 'ssh private key secret from org (github actions hates me)'
    required: true
  SSH_KNOWN_HOSTS: 
    description: 'ssh known hosts secret from org (github actions hates me)'
    required: true
    
runs:
  using: "composite"
  steps:
    - name: Validate Repo
      run: |
        [[ ${{ inputs.repo-owner }} -eq "sed-cloud" ]] || { echo >&2 "Cannot deploy projects from outside this organization"; exit 1; }
      shell: bash 
    
    - name: Sync Repo
      run: |
        git clone https://github.com/${{ inputs.repo-owner }}/${{ inputs.repo-name }}.git source
        cd source
      shell: bash 
  
    - name: Setup SSH
      shell: bash 
      env:
        SED_CLOUD_HOST: ${{ inputs.SED_CLOUD_HOST }}
        SED_CLOUD_USER: ${{ inputs.SED_CLOUD_USER }}
        SSH_PRIVATE_KEY: ${{ inputs.SSH_PRIVATE_KEY }}
        SSH_KNOWN_HOSTS: ${{ inputs.SSH_KNOWN_HOSTS }}
      run: | 
        mkdir -p ~/.ssh/
        echo "$SSH_PRIVATE_KEY" > source/deploy.key
        sudo chmod 600 source/deploy.key
        echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - name: Create env file
      run: |
        touch source/.env
        
        # handle builtin env variables
        echo SED_CLOUD_HOST=${{ inputs.SED_CLOUD_HOST }} >> source/.env
        echo SED_CLOUD_USER=${{ inputs.SED_CLOUD_USER }} >> source/.env
        echo REPO_OWNER=${{ inputs.repo-owner }} >> source/.env
        echo REPO_NAME=${{ inputs.repo-name }} >> source/.env
      shell: bash 
      
    - name: Install PM2
      shell: bash
      run: npm init -y && npm i pm2
      
    - name: Deploy
      shell: bash
      run: |
        cp -r ${{ github.action_path}}/execute_deploy.sh source/
        cd source/
        chmod +x execute_deploy.sh
        execute_deploy.sh
        
        # env $(cat .env | grep -v \"#\" | xargs) npx pm2 deploy ecosystem.config.js production update  
      
      
      
      
