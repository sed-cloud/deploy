name: 'deploy'
description: 'deploys a python repo to my droplet running pm2 (discount google cloud)'
inputs:
  repo-owner:
    description: 'owner of the repo being deployed (must be within the organization "sed-cloud")'
    required: true
  repo-name: 
    descreiption: 'name of the repo being deployed'
    required: true
  env-variables: 
    description: 'list of environment variables to pass through'
    requried: false
    default: {}
    
runs:
  using: "composite"
  steps:
    - name: Validate Repo
      run: |
        [[ ${{ inputs.repo-owner }} -eq "sed-cloud" ]] || { echo >&2 "Cannot deploy projects from outside this organization"; exit 1; }
      shell: bash 
    
    - name: Sync Repo
      run: |
        git clone https://github.com/${{ inputs.repo-owner }}/${{ inputs.repo-name }}.git source
        cd source
      shell: bash 
  
    - name: Setup SSH
      run: | 
        mkdir -p ~/.ssh/
        echo "$SSH_PRIVATE_KEY" > ./deploy.key
        sudo chmod 600 ./deploy.key
        echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
      shell: bash 
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
    
    - name: Create env file
      run: |
        touch .env
        
        # handle builtin env variables
        echo SED_CLOUD_USER="$SED_CLOUD_USER" >> .env 
        echo SED_CLOUD_HOST="$SED_CLOUD_HOST" >> .env
        echo REPO_OWNER=${{ inputs.repo-owner }} >> .env
        echo REPO_NAME=${{ inputs.repo-name }} >> .env
                
        # handle custom env variables
        array=${{inputs.env-variables}}
        for i in "${!array[@]}"
        do
          echo ${$i^^}=${!array[i]} >> .env
        done
      shell: bash 
      
    - name: Install PM2
        run: npm init -y && npm i pm2

    - name: Deploy
      run: pm2 describe ${{ inputs.repo-name }} > /dev/null && if [ $? -eq 1]; then  env $(cat .env | grep -v \"#\" | xargs) pm2 deploy ${{ github.action_path }}/ecosystem.config.js production setup else env $(cat .env | grep -v \"#\" | xargs) pm2 deploy ${{ github.action_path }}/ecosystem.config.js production update fi 
